# -*- coding: utf-8 -*-
"""Stemming And Its Type - Text Preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wZT4M0HLDOJZowFj2Je9eB-9a2PvVkem

**Stemming**

Stemming is the process of reducing a word to its word stem that affixes to suffixes and prefixes or the roots of word known as lemma. Stemming is imp in natural language understanding (NLU) and NLP.
"""

words = ["eating", "eats", "eaten", "writing", "writes", "programming", "programs", "history", "finally", "finalize"]

from nltk.stem import PorterStemmer

stemming = PorterStemmer()

for word in words:
  print(word + " ---> " + stemming.stem(word))

stemming.stem("fairly")

stemming.stem("congratulations")

stemming.stem("sitting")

"""**RegexpStemmer Class**

NLTK has RegexpStemmer class with the help of which we can easily implement Regular Expression Stemmer algos. It is basically takes a single regular expression and removes any prefix or suffix that matches the expression.
"""

from nltk.stem import RegexpStemmer

reg_stemmer = RegexpStemmer('ing$|e$|able$|ed$|ly$', min=4)

reg_stemmer.stem("eating")

for word in words:
  print(word + " ---> " + reg_stemmer.stem(word))

"""**Snowball Stemmer**"""

from nltk.stem import SnowballStemmer

snowball_stemmer = SnowballStemmer('english')

stemming.stem("fairly"), stemming.stem("sportingly")

snowball_stemmer.stem("fairly"), snowball_stemmer.stem("sportingly")

for word in words:
  print(word + " ---> " + snowball_stemmer.stem(word))

stemming.stem('goes'), snowball_stemmer.stem('goes')